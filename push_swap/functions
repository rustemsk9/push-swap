// package main

// import (
// 	"fmt"
// )

// func printStacks(A, B *stack) {
// 	fmt.Printf("A: %v\t", *A)
// 	fmt.Printf("B: %v\n", *B)
// }

// func sa(A, B *stack) {
// 	A.swap()
// 	fmt.Print("sa\\n")
// 	printStacks(A, B)
// }

// func sb(A, B *stack) {
// 	B.swap()
// 	fmt.Print("sb\\n")
// 	printStacks(A, B)
// }

// func ss(A, B *stack) {
// 	A.swap()
// 	B.swap()
// 	fmt.Print("ss\\n")
// 	printStacks(A, B)
// }

// func pa(A, B *stack) {
// 	num, _ := B.pop()
// 	*A = prepend(*A, num)
// 	fmt.Print("pa\\n")
// 	printStacks(A, B)
// }

// func pb(A, B *stack) {
// 	num, _ := A.pop()
// 	*B = prepend(*B, num)
// 	fmt.Print("pb\\n")
// 	printStacks(A, B)
// }

// func ra(A, B *stack) {
// 	A.rotateUp()
// 	fmt.Print("ra\\n")
// 	printStacks(A, B)
// }

// func rb(A, B *stack) {
// 	B.rotateUp()
// 	fmt.Print("rb\\n")
// 	printStacks(A, B)
// }

// func rr(A, B *stack) {
// 	A.rotateUp()
// 	B.rotateUp()
// 	fmt.Print("rr\\n")
// 	printStacks(A, B)
// }

// func rra(A, B *stack) {
// 	A.rotateDown()
// 	fmt.Print("rra\\n")
// 	printStacks(A, B)
// }

// func rrb(A, B *stack) {
// 	B.rotateDown()
// 	fmt.Print("rrb\\n")
// 	printStacks(A, B)
// }

// func rrr(A, B *stack) {
// 	A.rotateDown()
// 	B.rotateDown()
// 	fmt.Print("rrr\\n")
// 	printStacks(A, B)
// }

// func check(A, B *stack) bool {
// 	if A.isSorted() && B.isEmpty() {
// 		return true
// 	} else {
// 		return false
// 	}
// }
